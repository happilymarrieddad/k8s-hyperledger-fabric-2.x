apiVersion: apps/v1
kind: Deployment
metadata:
  name: orderers-ca
  labels: {
    component: orderers,
    type: ca
  }
spec:
  replicas: 1
  selector:
    matchLabels:
      component: orderers
      type: ca
  template:
    metadata:
      labels:
        component: orderers
        type: ca
    spec:
      volumes:
        - name: my-pv-storage
          persistentVolumeClaim:
            claimName: my-pv-claim
      containers:
        - name: orderers-ca
          image: hyperledger/fabric-ca:1.5.6
          command: ["fabric-ca-server"]
          args:
            - start
            - -b
            - admin:adminpw
            - --csr.hosts
            - orderers-ca,orderers-ca-service,orderers-ca-service
            - --db.datasource
            - "usr1:pass@tcp(mysql-db-service:3306)/hyperledger?parseTime=true"
            - --db.type
            - mysql
            - --db.tls.certfiles
            - /etc/mysql/ca.pem
            - --db.tls.client.certfile
            - /etc/mysql/client-cert.pem
            - --db.tls.client.keyfile
            - /etc/mysql/client-key.pem
          ports:
            - containerPort: 7054
          env:
            - name: FABRIC_CA_HOME
              value: /etc/hyperledger/fabric-ca-server
          volumeMounts:
            - mountPath: /etc/hyperledger/fabric-ca-server
              name: my-pv-storage
              subPath: state/orderers-ca
            - name: my-pv-storage
              mountPath: /etc/mysql
              subPath: state/mysql
